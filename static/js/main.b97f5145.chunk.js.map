{"version":3,"sources":["Components.js","CustomForm.js","App.js","Hook.js","index.js"],"names":["getAngle","fraction","factor","BaseHand","styled","div","ClockBase","props","color","clockColors","border","base","Center","center","SecondHand","second","MinuteHand","minute","HourHand","hour","CustomForm","useState","defaultOptions","options","setOptions","setClockColor","event","preventDefault","target","name","value","onSubmit","updateClock","buildClock","className","placeholder","label","type","onChange","App","date","Date","seconds","setSeconds","minutes","setMinutes","hours","setHours","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","getSeconds","getMinutes","getHours","new_options","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b97f5145.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport './App.css'\r\n\r\nconst getAngle = (fraction, factor=6) => (270 + (fraction * factor))\r\n\r\nconst BaseHand = styled.div`\r\n    position: relative;\r\n    top: 50%;\r\n`\r\n\r\nexport const ClockBase = styled.div`\r\n    position: relative;\r\n    border: ${props => props.color.clockColors.border ? '1em solid ' + props.color.clockColors.border : '1em solid gray'};\r\n    width: 50%;\r\n    height: 50%;\r\n    margin: 0 auto;\r\n    background-color: ${props => props.color.clockColors.base ? props.color.clockColors.base : 'black'};\r\n    border-radius: 100%;\r\n    @media only screen and (orientation : landscape) {\r\n        width: 50vh;\r\n        height: 50vh;\r\n    }\r\n    @media only screen and (max-width : 1400px) {\r\n        margin-top: 1rem;\r\n        width: 50vw;\r\n        height: 50vw;\r\n    }\r\n`\r\n\r\nexport const Center = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 12px;\r\n    height: 12px;\r\n    border: 2px solid #fff;\r\n    background-color: ${props => props.color.clockColors.center ? props.color.clockColors.center : 'gray'};\r\n    border-radius: 100%;\r\n    z-index: 100;\r\n`\r\n\r\nexport const SecondHand = styled(BaseHand)`\r\n    left: 40%;\r\n    outline: ${props => props.color.clockColors.second ? '2px solid ' + props.color.clockColors.second : '2px solid gray'};\r\n    width: 60%;\r\n    transform-origin: 17%;\r\n    transform: rotate(${props => getAngle(props.fraction)}deg);\r\n    transition: ${props => props.fraction > 0 ? 'transform 250ms ease-in-out' : 'none'};\r\n`\r\n\r\nexport const MinuteHand = styled(BaseHand)`\r\n    left: 45%;\r\n    outline: ${props => props.color.clockColors.minute ? '2px solid ' + props.color.clockColors.minute : '2px solid gray'};\r\n    width: 50%;\r\n    transform-origin: 10%;\r\n    transform: rotate(${props => getAngle(props.fraction)}deg)\r\n`\r\n\r\n\r\nexport const HourHand = styled(BaseHand)`\r\n    left: 45%;\r\n    outline: ${props => props.color.clockColors.hour ? '2px solid ' + props.color.clockColors.hour : '2px solid gray'};\r\n    width: 35%;\r\n    transform-origin: 14%;\r\n    transform: rotate(${props => getAngle(props.fraction, 30)}deg)\r\n`\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport './CustomForm.css';;\r\n\r\nfunction CustomForm(props) {\r\n    const [options, setOptions] = useState(props.defaultOptions)\r\n\r\n    const setClockColor = (event) => {\r\n        event.preventDefault();\r\n        let clockColors = { ...options.clockColors };\r\n        clockColors[event.target.name] = event.target.value;\r\n        setOptions({ ...options, clockColors });\r\n    }\r\n\r\n    const buildClock = (event) => {\r\n        event.preventDefault();\r\n        /*setTimeout(() => props.updateClock(options), 1000);*/\r\n        props.updateClock(options);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(event) => buildClock(event)}>\r\n            <div className='custom-title'>Custom Analog Clock </div>\r\n            <div className='all-hand-color-container'>\r\n                <div className='input-label-container'>\r\n                    <input className='color-input' placeholder='Second-color' label='Second Hand Color' name='second' type='text' onChange={setClockColor} />\r\n                </div>\r\n                <div className='input-label-container'>\r\n                    <input className='color-input' placeholder='Minute-color' label='Minute Hand Color' name='minute' type='text' onChange={setClockColor} />\r\n                </div>\r\n                <div className='input-label-container'>\r\n                    <input className='color-input' placeholder='Hour-color' label='Hour Hand Color' name='hour' type='text' onChange={setClockColor} />\r\n                </div>\r\n                <div className='input-label-container'>\r\n                    <input className='color-input' placeholder='Border-color' label='Border Color' name='border' type='text' onChange={setClockColor} />\r\n                </div>\r\n                <div className='input-label-container'>\r\n                    <input className='color-input' placeholder='Base-color' label='Base Color' name='base' type='text' onChange={setClockColor} />\r\n                </div>\r\n                <div className='input-label-container'>\r\n                    <input className='color-input' placeholder='Center-color' label='Center Color' name='center' type='text' onChange={setClockColor} />\r\n                </div>\r\n            </div>\r\n            <div className='custom-submit-button-container'>\r\n                <button  className='custom-submit-button' type='submit'>Submit</button>\r\n            </div>\r\n        </form>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default CustomForm;","import React, { useState } from 'react';\r\nimport { useInterval } from './Hook';\r\nimport { ClockBase, Center, SecondHand, MinuteHand, HourHand } from './Components';\r\nimport CustomForm from './CustomForm';\r\nimport './App.css'\r\n\r\n\r\nconst App = () => {\r\n    const date = new Date();\r\n    const [seconds, setSeconds] = useState(0)\r\n    const [minutes, setMinutes] = useState(0)\r\n    const [hours, setHours] = useState(0)\r\n\r\n    const [options, setOptions] = useState({\r\n        clockColors: {\r\n            second: 'green',\r\n            minute: 'blue',\r\n            hour: 'red',\r\n            border: 'gray',\r\n            base: 'black',\r\n            center: 'gray'\r\n        }\r\n    })\r\n\r\n    const updateClock = (new_options) => {\r\n        setOptions({ ...new_options });\r\n    }\r\n\r\n\r\n    useInterval(() => {\r\n        setSeconds(date.getSeconds())\r\n        setMinutes(date.getMinutes())\r\n        setHours(date.getHours() % 12 || 12)\r\n    }, 1000 )\r\n    \r\n    return(\r\n        \r\n        <div className='main-container'>\r\n            <h1 className='form-container'>\r\n                <CustomForm defaultOptions={options} updateClock={updateClock} />\r\n            </h1> \r\n            <div className='clock-container'>\r\n                <ClockBase color={options}>\r\n                    <Center color={options}/>\r\n                    <SecondHand fraction={seconds} color={options}/>\r\n                    <MinuteHand fraction={minutes} color={options}/>\r\n                    <HourHand fraction={hours} color={options}/>\r\n                </ClockBase>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App;","import { useEffect, useRef } from 'react';\r\n \r\nexport const useInterval = (callback, delay) => {\r\n    const savedCallback = useRef()\r\n\r\n    // Remembers latest callback\r\n    useEffect(() => {\r\n        savedCallback.current = callback\r\n    }, [callback])\r\n\r\n    //Set-up the interval\r\n    useEffect(() => {\r\n        const tick = () => {\r\n            savedCallback.current()\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay)\r\n            return () => clearInterval(id)\r\n        }\r\n    }, [delay])\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n"],"sourceRoot":""}