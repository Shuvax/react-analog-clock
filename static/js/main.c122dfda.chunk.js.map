{"version":3,"sources":["Components.js","CustomForm.js","App.js","Hook.js","index.js"],"names":["getAngle","fraction","factor","BaseHand","styled","div","ClockBase","Center","SecondHand","props","color","handColors","second","MinuteHand","minute","HourHand","hour","CustomForm","useState","defaultOptions","options","setOptions","setHandColor","event","preventDefault","target","name","value","className","TextField","label","type","onChange","Button","onClick","stopPropagation","updateClock","App","date","Date","seconds","setSeconds","minutes","setMinutes","hours","setHours","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","getSeconds","getMinutes","getHours","new_options","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c122dfda.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport './App.css'\r\n\r\nconst getAngle = (fraction, factor=6) => (270 + (fraction * factor))\r\n\r\nconst BaseHand = styled.div`\r\n    position: relative;\r\n    top: 50%;\r\n`\r\n\r\nexport const ClockBase = styled.div`\r\n    position: relative;\r\n    border: 10px solid gray;\r\n    width: 50%;\r\n    height: 50%;\r\n    margin: 0 auto;\r\n    background-color: black;\r\n    border-radius: 100%;\r\n    @media only screen and (orientation : landscape) {\r\n        width: 50vh;\r\n        height: 50vh;\r\n    }\r\n`\r\n\r\nexport const Center = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 12px;\r\n    height: 12px;\r\n    border: 2px solid #fff;\r\n    background-color: gray;\r\n    border-radius: 100%;\r\n    z-index: 100;\r\n`\r\n\r\nexport const SecondHand = styled(BaseHand)`\r\n    left: 40%;\r\n    outline: ${props => props.color.handColors.second? '2px solid ' + props.color.handColors.second : '2px solid gray'};\r\n    width: 60%;\r\n    transform-origin: 17%;\r\n    transform: rotate(${props => getAngle(props.fraction)}deg);\r\n    transition: ${props => props.fraction > 0 ? 'transform 250ms ease-in-out' : 'none'};\r\n`\r\n\r\nexport const MinuteHand = styled(BaseHand)`\r\n    left: 45%;\r\n    outline: ${props => props.color.handColors.minute? '2px solid ' + props.color.handColors.minute : '2px solid gray'};\r\n    width: 50%;\r\n    transform-origin: 10%;\r\n    transform: rotate(${props => getAngle(props.fraction)}deg)\r\n`\r\n\r\n\r\nexport const HourHand = styled(BaseHand)`\r\n    left: 45%;\r\n    outline: ${props => props.color.handColors.hour? '2px solid ' + props.color.handColors.hour : '2px solid gray'};\r\n    width: 35%;\r\n    transform-origin: 14%;\r\n    transform: rotate(${props => getAngle(props.fraction, 30)}deg)\r\n`\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport './CustomForm.css';\r\nimport { Button, TextField } from '@material-ui/core';\r\n\r\nfunction CustomForm(props) {\r\n    const [options, setOptions] = useState(props.defaultOptions)\r\n\r\n    const setHandColor = (event) => {\r\n        event.preventDefault();\r\n        let handColors = { ...options.handColors };\r\n        handColors[event.target.name] = event.target.value;\r\n        setOptions({ ...options, handColors });\r\n    }\r\n\r\n    const buildClock = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        props.updateClock(options);\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <div className='custom-title'>Custom Analog Clock </div>\r\n            <div className='all-hand-color-container'>\r\n                <div className='input-label-container'>\r\n                    <TextField label='Second Hand Color' name='second' type='text' onChange={setHandColor} />\r\n                </div>\r\n                <div className='input-label-container'>\r\n                    <TextField label='Minute Hand Color' name='minute' type='text' onChange={setHandColor} />\r\n                </div>\r\n                <div className='input-label-container'>\r\n                    <TextField label='Hour Hand Color' name='hour' type='text' onChange={setHandColor} />\r\n                </div>\r\n            </div>\r\n            <div className='custom-submit-button'>\r\n                <Button  type='submit' onClick={buildClock}>Submit</Button>\r\n            </div>\r\n        </form>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default CustomForm;","import React, { useState } from 'react';\r\nimport { useInterval } from './Hook';\r\nimport { ClockBase, Center, SecondHand, MinuteHand, HourHand } from './Components';\r\nimport CustomForm from './CustomForm';\r\nimport './App.css'\r\n\r\n\r\nconst App = () => {\r\n    const date = new Date();\r\n    const [seconds, setSeconds] = useState(0)\r\n    const [minutes, setMinutes] = useState(0)\r\n    const [hours, setHours] = useState(0)\r\n\r\n    const [options, setOptions] = useState({\r\n        handColors: {\r\n            second: 'green',\r\n            minute: 'blue',\r\n            hour: 'red'\r\n        }\r\n    })\r\n\r\n    const updateClock = (new_options) => {\r\n        setOptions({ ...new_options });\r\n    }\r\n\r\n\r\n    useInterval(() => {\r\n        setSeconds(date.getSeconds())\r\n        setMinutes(date.getMinutes())\r\n        setHours(date.getHours() % 12 || 12)\r\n    }, 1000 )\r\n    \r\n    return(\r\n        \r\n        <div className='main-container'>\r\n            <h1 className='form-container'>\r\n                <CustomForm defaultOptions={options} updateClock={updateClock} />\r\n            </h1> \r\n            <div className='clock-container'>\r\n                <ClockBase>\r\n                    <Center />\r\n                    <SecondHand fraction={seconds} color={options}/>\r\n                    <MinuteHand fraction={minutes} color={options}/>\r\n                    <HourHand fraction={hours} color={options}/>\r\n                </ClockBase>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App;","import { useEffect, useRef } from 'react';\r\n \r\nexport const useInterval = (callback, delay) => {\r\n    const savedCallback = useRef()\r\n\r\n    // Remembers latest callback\r\n    useEffect(() => {\r\n        savedCallback.current = callback\r\n    }, [callback])\r\n\r\n    //Set-up the interval\r\n    useEffect(() => {\r\n        const tick = () => {\r\n            savedCallback.current()\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay)\r\n            return () => clearInterval(id)\r\n        }\r\n    }, [delay])\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}